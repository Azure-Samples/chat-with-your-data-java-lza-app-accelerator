{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentParameters.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    // The name of the workload that is being deployed. Up to 10 characters long. This wil be used as part of the naming convention (i.e. as defined here: https://learn.microsoft.com/azure/cloud-adoption-framework/ready/azure-best-practices/resource-naming) 
    "workloadName": {
      "value": "lzaaca"
    },
    //The name of the environment (e.g. "dev", "test", "prod", "preprod", "staging", "uat", "dr", "qa"). Up to 8 characters long.
    "environment": {
      "value": "dev"
    },
    "tags": {
        "value": {}
    },

    // Replace with the name of the container apps environment
    "containerAppsEnvironmentName": {
      "value": "<CONTAINER_APPS_ENVIRONMENT_NAME>"
    },

    /* SERVICES */
    "vehicleRegistrationServiceName": {
      "value": "vehicle-registration-service"
    },
    "fineCollectionServiceName": {
      "value": "fine-collection-service"
    },
    "trafficControlServiceName": {
      "value": "traffic-control-service"
    },
    // Replace with the resource ID of the hub virtual network - required to link the privateDNS zone to the Hub network as well 
    "hubVNetId": {
      "value": "<HUB_VNET_ID>"
    },
    /* SPOKE PRIVATE ENDPOINTS SUBNET */
    // Replace with the name of spoke virtual network
    "spokeVNetName": {
      "value": "<SPOKE_VNET_NAME>"
    },
    // Replace with the name of the spoke private endpoints subnet name
    "spokePrivateEndpointsSubnetName": {
      "value": "<SPOKE_PRIVATE_ENDPOINTS_SUBNET_NAME>"
    },

    /* SERVICE BUS */
    "serviceBusTopicName": {
      "value": "test"
    },
    "serviceBusTopicAuthorizationRuleName": {
      "value": "TestTopicSharedAccessKey"
    },

    /* COSMOS DB */
    "cosmosDbDatabaseName": {
      "value": "cosmos-db-fines"
    },
    "cosmosDbCollectionName": {
      "value": "traffic-control-vehicle-state"
    },

    /* DAPR COMPONENTS */
    "secretStoreComponentName": {
      "value": "secretstore"
    },
    "pubSubComponentName": {
      "value": "pubsub"
    },
    "stateStoreComponentName": {
      "value": "statestore"
    },

    /* KEY VAULT */
    // Replace with the resource ID of the key vault
    "keyVaultId": {
      "value": "<KEY_VAULT_ID>"
    },
    "fineLicenseKeySecretName": {
      "value": "license-key"
    },
    "fineLicenseKeySecretValue": {
      "value": "HX783-5PN1G-CRJ4A-K2L7V"
    },

    /* CONTAINER REGISTRY & IMAGES */
    // Replace with the name of the container registry
    "containerRegistryName": {
      "value": "<CONTAINER_REGISTRY_NAME>"
    },
    // For the images, replace the <CONTAINER_REGISTRY_NAME> placeholder with the name of the container registry or replace it with the full image name
    "vehicleRegistrationServiceImage": {
      "value": "<CONTAINER_REGISTRY_NAME>.azurecr.io/vehicle-registration-service:1.0"
    },
    "fineCollectionServiceImage": {
      "value": "<CONTAINER_REGISTRY_NAME>.azurecr.io/fine-collection-service:1.0"
    },
    "trafficControlServiceImage": {
      "value": "<CONTAINER_REGISTRY_NAME>.azurecr.io/traffic-control-service:1.0"
    },
    // Replace with the resource ID of the container registry user assigned identity
    "containerRegistryUserAssignedIdentityId": {
      "value": "<CONTAINER_REGISTRY_USER_ASSIGNED_IDENTITY_ID>"
    },

    /* SIMULATION */
    // If true, the simulation will be deployed in the environment and use the traffic control service FQDN
    "deploySimulationInAcaEnvironment": {
      "value": false
    },
    // If deploySimulationInAcaEnvironment is set to true, this parameter is required
    "simulationName": {
      "value": "simulation"
    },
    // If deploySimulationInAcaEnvironment is set to true, this parameter is required
    "simulationImage": {
      "value": "<CONTAINER_REGISTRY_NAME>.azurecr.io/simulation:1.0"
    },

    /* APPLICATION GATEWAY */
    // The FQDN of the Application Gateway. Must match the TLS certificate.
    "applicationGatewayFqdn": {
      "value": "acahello.demoapp.com"
    },
    // Replace with the name of the spoke application gateway subnet name
    "spokeApplicationGatewaySubnetName": {
      "value": "<SPOKE_APPLICATION_GATEWAY_SUBNET_NAME>"
    },
    "enableApplicationGatewayCertificate": {
      "value": true
    },
    "applicationGatewayCertificateKeyName": {
      "value": "agwcert"
    }
  }
}
